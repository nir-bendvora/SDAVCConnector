package sd_avc_connectors;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

import com.bendvora.sd_avc_connectors.AppTxtRecordParser;
import com.bendvora.sd_avc_connectors.RetCodes;

public class AppTxtRecordParserTest {

	@Test
	public void test() {
		
		AppTxtRecordParser parser = new AppTxtRecordParser();
		
		String str1 = "CISCO-CLS=app-name:NirTestApp|app-class:TD|business:YES|server-port:TCP/80|app-id:CU/10";
		assertEquals(RetCodes.SUCCESS, parser.set_txt(str1));
		assertEquals("NirTestApp", parser.get_app_name());
		assertEquals("TRANSACTIONAL-DATA", parser.get_attr_tc());
		assertEquals("YES", parser.get_attr_br());
		assertEquals("CU/10", parser.get_app_id());
		assertEquals("UNDEFINED", parser.get_attr_cat());
		assertEquals("UNDEFINED", parser.get_attr_sub_cat());
		assertEquals("UNDEFINED", parser.get_attr_app_set());
		
		// Make sure it's case insensitive
		String str2 = "CISCO-CLS=aPp-nAme:NirTestApp|apP-claSs:Td|busINess:YeS|serVEr-port:TCP/80|App-iD:Cu/10";
		assertEquals(RetCodes.SUCCESS, parser.set_txt(str2));
		assertEquals("NirTestApp", parser.get_app_name());
		assertEquals("TRANSACTIONAL-DATA", parser.get_attr_tc());
		assertEquals("YES", parser.get_attr_br());
		assertEquals("CU/10", parser.get_app_id());
		assertEquals("UNDEFINED", parser.get_attr_cat());
		assertEquals("UNDEFINED", parser.get_attr_sub_cat());
		assertEquals("UNDEFINED", parser.get_attr_app_set());
		
		// Wrong initiator
		String str3 = "CICO-CLS=aPp-nAme:NirTestApp|apP-claSs:Td|busINess:YeS|serVEr-port:TCP/80|App-iD:Cu/10";
		assertEquals(RetCodes.ERROR, parser.set_txt(str3));

		// Long size
		String str4 = "CISCO-CLS=" + 
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789";
		assertEquals(RetCodes.ERROR, parser.set_txt(str4));

		// Good size but unknown values
		String str5 = "CISCO-CLS=" + 
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"0123app-class:456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"0123456789business:9012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"012345app-id:CU/|789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456app-category:01234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890app-sub-category:8901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"0123app-set:23456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789" +
		"01234567890123456789012345678901234567890123456789";
		assertEquals(RetCodes.SUCCESS, parser.set_txt(str5));
		assertEquals("UNDEFINED", parser.get_app_name());
		assertEquals("UNDEFINED", parser.get_attr_tc());
		assertEquals("UNDEFINED", parser.get_attr_br());
		assertEquals("UNDEFINED", parser.get_app_id());
		assertEquals("UNDEFINED", parser.get_attr_cat());
		assertEquals("UNDEFINED", parser.get_attr_sub_cat());
		assertEquals("UNDEFINED", parser.get_attr_app_set());
		
	}

}
